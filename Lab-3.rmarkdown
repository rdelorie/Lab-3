---
title: "Lab 3"
subtitle: ESS 330
author: Rachel Delorie
format:
  html:
    self-contained: true
---

```{r}
# Setup
library(tidyverse)
library(flextable)
library(dplyr)
library(zoo)
library(readr)
covid_data = read_csv('https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv')
rename

txt <- "2022-02-01"
class(txt)
date_example <- as.Date(txt)
class(date_example)

my.date <- as.Date("2022-02-01")
my.state <- "Colorado"
```

```{r}
# question 2
colorado <- covid_data %>%
  filter(state == my.state) %>% 
  group_by(county) %>% 
  arrange(date) %>% 
  mutate(new_cases = cases - lag(cases), new_deaths = lag(deaths)) %>% 
  ungroup()
```

```{r}
filter(colorado, date == my.date) %>%
  slice_max(cases, n = 5) %>%
  select(Date = date, Cases = cases, County = county) %>%
  flextable() %>%
  set_caption("Most Total Cases")

filter(colorado, date == my.date) %>% #my date and only colorado
  slice_max (cases, n = 5) %>% 
  select (Date = date, County = county, Cases = new_cases) %>% 
  flextable() %>% 
  set_caption(caption = "Most New Cases")
```

```{r}
# question 3
pop_data <- read_csv("https://www2.census.gov/programs-surveys/popest/datasets/2020-2023/counties/totals/co-est2023-alldata.csv")

pop_data <- pop_data %>%
  mutate(
    FIPS = paste0(STATE, COUNTY)                  # Create full 5-digit FIPS code
  ) %>%
  # Step 3: Keep only columns containing "NAME" or "2021"
  select(matches("NAME|2021"), FIPS) %>%
  # Step 4: Remove state-level rows (where COUNTY == "000")
  filter("COUNTY" != "000") 
=
# exlpore the data
names(pop_data)
dim(pop_data)
nrow(pop_data)
str(pop_data)
glimpse(pop_data)
# The data has several rows describing the changes in the 2021 population, incluing deaths, births, and migration. State and city name are provided. State fips are columns that are shared between covid_data and pop_data.

# step 3: range of populations seen in colorado counties in 2021: 
co_pop <- pop_data %>% 
  filter(STNAME == "Colorado") %>% 
  group_by(CTYNAME)

pop_range <- range(co_pop$`POPESTIMATE2021`, na.rm = TRUE)

cat("Range of populations in Colorado counties in 2021:", pop_range)
# Range of populations in Colorado counties in 2021: 741 5811596

# step 4: join tables
popandcovid <- left_join(covid_data, pop_data, by = c("state" = "STNAME", "fips" = "FIPS")) %>%
  mutate(
    new_cases = cases - lag(cases),
    cases_percap = cases / POPESTIMATE2021,
    deaths_percap = deaths / POPESTIMATE2021,
    date = as.Date(date))

# step 5: make 2 new flextables
popandcovid %>% 
  select(county, date, cases_percap) %>%
  subset(date == "2021-01-01") %>%  # filter rows for 2021-01-01 (couldn't use fitler bc date was making it weird)
  head(n = 5) %>%  # Get the top 5 rows
  flextable() %>% 
  set_caption(caption = "Counties With the Most CUMULATIVE Cases Per Capita on 2021-01-01")

popandcovid %>% 
  select(county, date, cases_percap) %>% 
  head(n=5) %>% 
  slice_max(date, n=5) %>% # get the top 5 most new dates
    flextable() %>% 
  set_caption(caption = "Counties With the Most NEW Cases Per Capita on 2021-01-01")
```

```{r}
# question 4
latest_date <- max(popandcovid$date, na.rm = TRUE)  # Get the latest date
    popandcovid %>%
      filter(date >= (latest_date - 13))  # Filter data for the last 14 days (including the latest date)
  
newinlast14days <- popandcovid %>% 
  
  group_by(county) %>% 
  summarize(sumofnewcases14d = sum(new_cases, na.rm = TRUE), population = first(POPESTIMATE2021)) %>% 
  
mutate(casesper100k = (sumofnewcases14d/population) *100000)
watchlist_count <- newinlast14days %>% 
  filter(casesper100k>100) %>% 
  nrow() %>% 
slice_max(order_by = casesper100k, n = 5)
print(newinlast14days)

# â€œMore than 100 new cases per 100,000 residents over the past 14 days: 
```

